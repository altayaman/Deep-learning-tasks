


batch_size_ = 64

model = Sequential()
# --------------------------------------------------------------------------------------
# ---- Embedding layer -----------------------------------------------------------------
embedding_layer = Embedding(top_words, 
                            embedding_vecor_length, 
                            weights=[embedding_matrix], 
                            input_length = max_description_length,
                            trainable=False)
model.add(embedding_layer)
## LSTM 1  ==============================================================================
## ======================================================================================
LSTM_1 = LSTM(128
               #,return_sequences=True
             )
model.add(LSTM_1)

## Dense 1  =============================================================================
## ======================================================================================
Dense_1 = Dense(128
                ,activation='sigmoid'
                #,input_shape = (max_description_length,)
                )
model.add(Dense_1)

## Output classes layer  ================================================================
## ======================================================================================
model.add(Dense(len(nb_classes), activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])  # try loss=categorical_crossentropy


Accuracy: 0.8391